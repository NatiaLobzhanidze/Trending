//
//  HomeSceneInteractor.swift
//  Trending
//
//  Created by Natia's Mac on 08.02.23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeSceneBusinessLogic {
    func getData(request: HomeScene.GetResponse.Request)
}

protocol HomeSceneDataStore {
  //var name: String { get set }
}

class HomeSceneInteractor:  HomeSceneDataStore {
    
  var presenter: HomeScenePresentationLogic
  var worker: HomeSceneWorker
  var fetchedItem = [Item]()
    
  // MARK: Do something
    init(presenter: HomeScenePresentationLogic, worker: HomeSceneWorker) {
        self.presenter = presenter
        self.worker = worker
    }
//  func doSomething(request: HomeScene.Something.Request)
//  {
//    worker = HomeSceneWorker()
//    worker?.doSomeWork()
//
//    let response = HomeScene.Something.Response()
//    presenter?.presentSomething(response: response)
//  }
}

extension HomeSceneInteractor: HomeSceneBusinessLogic {
    
    func getData(request: HomeScene.GetResponse.Request) {
        Task {
            do {
                let mainResponse = try await worker.fetchData()
                DispatchQueue.main.async { [weak self] in
                    guard let self = self else { return}
                    self.fetchedItem = mainResponse.items
                    self.presenter.presentItem(response: HomeScene.GetResponse.Response(items:  self.fetchedItem ))
                }
            } catch {
                //Error handling
                print(error.localizedDescription)
            }
        }
    }
    
}
